<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Alumno;
use AppBundle\Entity\CursoAcademico;
use Doctrine\ORM\EntityRepository;

/**
 * PrematriculaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PrematriculaRepository extends EntityRepository
{
    public function getPrematriculas(CursoAcademico $cursoAcademico)
    {
        $result = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('p, pc, a, c')
            ->from('AppBundle:Prematricula', 'p')
            ->innerJoin('p.prematriculaEnCursos', 'pc')
            ->innerJoin('p.alumno','a')
            ->innerJoin('pc.curso', 'c')
            ->innerJoin('c.cursoAcademico','cu')
            ->where('cu = :cursoAcademico')
            ->setParameter('cursoAcademico', $cursoAcademico)
            ->orderBy('p.createdAt','ASC')
            ->getQuery()
            ->getResult();

        return $result;
    }

    public function isAlumnoPrematriculado(Alumno $alumno, CursoAcademico $cursoAcademico)
    {
        $result = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('p')
            ->from('AppBundle:Prematricula', 'p')
            ->innerJoin('p.prematriculaEnCursos', 'pc')
            ->innerJoin('p.alumno','a')
            ->innerJoin('pc.curso', 'c')
            ->innerJoin('c.cursoAcademico','cu')
            ->where('cu = :cursoAcademico')
            ->andWhere('a = :alumno')
            ->setParameter('cursoAcademico', $cursoAcademico)
            ->setParameter('alumno', $alumno)
            ->orderBy('p.createdAt','ASC')
            ->getQuery()
            ->getOneOrNullResult();

        if(!$result)
            return false;
        else
            return true;
    }

    public function getTotal(CursoAcademico $cursoAcademico)
    {
        $result = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('COUNT(p) as total')
            ->from('AppBundle:Prematricula', 'p')
            ->innerJoin('p.prematriculaEnCursos', 'pre')
            ->innerJoin('pre.curso','c')
            ->innerJoin('c.cursoAcademico','cu')
            ->where('cu = :cursoAcademico')
            ->setParameter('cursoAcademico', $cursoAcademico)
            ->getQuery()
            ->getResult();

        return $result[0]['total'];
    }
}
